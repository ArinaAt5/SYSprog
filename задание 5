import multiprocessing
import math
import time

def factorial(n):
    result = 1
    for i in range(1, n + 1):
        result *= i
    return result

def calculate_factorials_parallel(numbers):
    with multiprocessing.Pool() as pool:
        results = pool.map(factorial, numbers)
    return results

if __name__ == "__main__":

    numbers = list(range(1, 1001))

    start_time = time.time()
    factorials_parallel = calculate_factorials_parallel(numbers)
    parallel_time = time.time() - start_time

    start_time = time.time()
    factorials_sequential = [factorial(n) for n in numbers]
    sequential_time = time.time() - start_time

    print(f"Многопроцессорный подход: {parallel_time:.4f} секунд")
    print(f"Последовательный подход: {sequential_time:.4f} секунд")
    print(f"Ускорение: {sequential_time / parallel_time:.2f}x")

    for i in range(10):
        print(f"Факториал {numbers[i]} = {factorials_parallel[i]}")
